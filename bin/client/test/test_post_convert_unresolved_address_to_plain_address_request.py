# coding: utf-8

"""
    Symbol REST Wrapper

    API server that makes development more convenient

    The version of the OpenAPI document: 0.0.1
    Contact: ym.u.ichiro@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.post_convert_unresolved_address_to_plain_address_request import PostConvertUnresolvedAddressToPlainAddressRequest

class TestPostConvertUnresolvedAddressToPlainAddressRequest(unittest.TestCase):
    """PostConvertUnresolvedAddressToPlainAddressRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostConvertUnresolvedAddressToPlainAddressRequest:
        """Test PostConvertUnresolvedAddressToPlainAddressRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostConvertUnresolvedAddressToPlainAddressRequest`
        """
        model = PostConvertUnresolvedAddressToPlainAddressRequest()
        if include_optional:
            return PostConvertUnresolvedAddressToPlainAddressRequest(
                var_from = openapi_client.models.unresolved_address.UnresolvedAddress(
                    unresolved_address = '', )
            )
        else:
            return PostConvertUnresolvedAddressToPlainAddressRequest(
                var_from = openapi_client.models.unresolved_address.UnresolvedAddress(
                    unresolved_address = '', ),
        )
        """

    def testPostConvertUnresolvedAddressToPlainAddressRequest(self):
        """Test PostConvertUnresolvedAddressToPlainAddressRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
